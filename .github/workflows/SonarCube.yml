name: Build and Test SonarQube Connectivity

on:
  push:
    branches:
      - main

jobs:
  test-sonarqube:
    name: Test SonarQube Connectivity
    runs-on: ubuntu-latest
    
    services:
      sonarqube-db:
        image: postgres:alpine
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar
          POSTGRES_DB: sonarqube
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U sonar"

      sonarqube:
        image: sonarqube
        env:
          SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonarqube
          SONAR_JDBC_USERNAME: sonar
          SONAR_JDBC_PASSWORD: sonar
        ports:
          - 9000:9000
        options: --health-cmd "curl -f http://localhost:9000 || exit 1"

    steps:
      - name: Wait for services to be ready
        run: sleep 30
      
      - name: Test SonarQube connection
        run: curl -I http://127.0.0.1:9000

      - name: Check SonarQube response
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:9000)
          if [ $response -eq 200 ]; then
            echo "SonarQube is up and running."
          else
            echo "Failed to connect to SonarQube. HTTP status code: $response"
            exit 1
          fi

  build-and-analyze:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - name: Check SonarQube Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
