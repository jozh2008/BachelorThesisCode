<tool name="SAGA.imagery_opencv.7" id="saga_imagery_opencv_7" version="1.0.0">
  <description>Support Vector Machine Classification (OpenCV)</description>
  <requirements>
    <requirement version="3.9" type="package">python</requirement>
  </requirements>
  <version_command><![CDATA[interpreter filename.exe --version]]></version_command>
  <command><![CDATA[$__tool_directory__/Code/openapi.py isArrayFEATURES True  isArrayMODEL_LOAD False  isArrayTRAIN_AREAS False  isArrayTRAIN_CLASS False  isArrayMODEL_SAVE False  output_data_CLASSES $output_data_CLASSES  name SAGA.imagery_opencv.7 FEATURES $FEATURES
NORMALIZE $NORMALIZE
RGB_COLORS $RGB_COLORS
MODEL_LOAD $MODEL_LOAD
TRAIN_AREAS $TRAIN_AREAS
TRAIN_CLASS $TRAIN_CLASS
TRAIN_BUFFER $TRAIN_BUFFER
MODEL_SAVE $MODEL_SAVE
SVM_TYPE $SVM_TYPE
C $C
NU $NU
P $P
KERNEL $KERNEL
COEF0 $COEF0
DEGREE $DEGREE
GAMMA $GAMMA
prefer $prefer
response $response
outputType_CLASSES $OutputSection_CLASSES.outputType_CLASSES
transmissionMode_CLASSES $OutputSection_CLASSES.transmissionMode_CLASSES]]></command>
  <inputs>
    <param name="FEATURES" type="data" optional="false" label="Features" help="Features The following data types are allowed in the txt file:  x-ogc-aaigrid, x-ogc-envi, tiff, png" format="txt"/>
    <param name="NORMALIZE" type="select" optional="true" label="Normalize" help="Normalize">
      <option selected="true" value="false">false</option>
      <option value="true">true</option>
    </param>
    <param name="RGB_COLORS" type="select" optional="true" label="Update Colors from Features" help="Use the first three features in list to obtain blue, green, red components for class colour in look-up table.">
      <option selected="true" value="false">false</option>
      <option value="true">true</option>
    </param>
    <param name="MODEL_LOAD" type="data" optional="false" label="Load Model" help="Use a model previously stored to file. The following data types are allowed in the txt file:  plain" format="txt"/>
    <param name="TRAIN_AREAS" type="data" optional="false" label="Training Areas" help="Training Areas The following data types are allowed in the txt file:  xml, json, vnd.google-earth.kml+xml" format="txt"/>
    <param name="TRAIN_CLASS" type="data" optional="false" label="Class Identifier" help="Class Identifier The following data types are allowed in the txt file:  csv" format="txt"/>
    <param name="TRAIN_BUFFER" type="float" value="1" optional="true" label="Buffer Size" help="For non-polygon type training areas, creates a buffer with a diameter of specified size."/>
    <param name="MODEL_SAVE" type="data" optional="false" label="Save Model" help="Stores model to file to be used for subsequent classifications instead of training areas. The following data types are allowed in the txt file:  plain" format="txt"/>
    <param name="SVM_TYPE" type="select" optional="true" label="SVM Type" help="SVM Type">
      <option selected="true" value="c-support_vector_classification">c-support vector classification</option>
      <option value="distribution_estimation_(one_class)">distribution estimation (one class)</option>
      <option value="epsilon_support_vector_regression">epsilon support vector regression</option>
      <option value="nu_support_vector_classification">nu support vector classification</option>
      <option value="nu_support_vector_regression">nu support vector regression</option>
    </param>
    <param name="C" type="float" value="1" optional="true" label="C" help="C"/>
    <param name="NU" type="float" value="0.5" optional="true" label="Nu" help="Nu"/>
    <param name="P" type="float" value="0.5" optional="true" label="P" help="P"/>
    <param name="KERNEL" type="select" optional="true" label="Kernel Type" help="Kernel Type">
      <option value="exponential_chi2">exponential chi2</option>
      <option value="histogram_intersection">histogram intersection</option>
      <option value="linear">linear</option>
      <option selected="true" value="polynomial">polynomial</option>
      <option value="radial_basis_function">radial basis function</option>
      <option value="sigmoid">sigmoid</option>
    </param>
    <param name="COEF0" type="float" value="1" optional="true" label="Coefficient 0" help="Coefficient 0"/>
    <param name="DEGREE" type="float" value="0.5" optional="true" label="Degree" help="Degree"/>
    <param name="GAMMA" type="float" value="1" optional="true" label="Gamma" help="Gamma"/>
    <param name="prefer" type="select" label="Choose the Prefer">
      <option selected="true" value="respond-async;return=representation">respond-async;return=representation</option>
      <option value="return=minimal">return=minimal</option>
      <option value="return=representation">return=representation</option>
    </param>
    <param name="response" type="select" label="Response Type" help="Choose 'raw' for raw data or 'document' for document data.">
      <option selected="true" value="document">document</option>
      <option value="raw">raw</option>
    </param>
    <section name="OutputSection_CLASSES" title="Select the appropriate transmission mode for the output format and the output value" expanded="true">
      <param name="outputType_CLASSES" type="select" label="Classification" help="Classification">
        <option value="application/x-ogc-aaigrid">x-ogc-aaigrid</option>
        <option value="application/x-ogc-envi">x-ogc-envi</option>
        <option value="image/png">png</option>
        <option value="image/tiff">tiff</option>
      </param>
      <param name="transmissionMode_CLASSES" type="select" label="Choose the transmission mode">
        <option selected="true" value="reference">reference</option>
        <option value="value">value</option>
      </param>
    </section>
  </inputs>
  <outputs>
    <data name="output_data_CLASSES" format="tiff" hidden="false">
      <change_format>
        <when input="response" format="txt" value="document"/>
        <when input="outputType_CLASSES" format="x-ogc-envi" value="application/x-ogc-envi"/>
        <when input="outputType_CLASSES" format="x-ogc-aaigrid" value="application/x-ogc-aaigrid"/>
        <when input="outputType_CLASSES" format="png" value="image/png"/>
      </change_format>
    </data>
  </outputs>
  <tests>
    <test>
      <output name="output_data" value="txt"/>
      <param name="response" value="document"/>
    </test>
  </tests>
  <help><![CDATA[Integration of the OpenCV Machine Learning library for Support Vector Machine classification of gridded features.]]></help>
  <citations>
    <citation type="bibtex">Josh</citation>
  </citations>
</tool>
