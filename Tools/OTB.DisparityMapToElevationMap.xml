<tool name="OTB.DisparityMapToElevationMap" id="otb_disparitymaptoelevationmap" version="1.0.0">
  <description>Projects a disparity map into a regular elevation map.</description>
  <requirements>
    <requirement version="3.9" type="package">python</requirement>
  </requirements>
  <version_command><![CDATA[interpreter filename.exe --version]]></version_command>
  <command><![CDATA[$__tool_directory__/Code/openapi.py isArrayio.in False  isArrayio.left False  isArrayio.right False  isArrayio.lgrid False  isArrayio.rgrid False  isArrayio.mask False  isArrayelev.geoid False  output_data_io.out $output_data_io.out  name OTB.DisparityMapToElevationMap io.in $io.in
io.left $io.left
io.right $io.right
io.lgrid $io.lgrid
io.rgrid $io.rgrid
io.out $io.out
io.mask $io.mask
step $step
hmin $hmin
hmax $hmax
elev.dem '$elev.dem'
elev.geoid $elev.geoid
elev.default $elev.default
ram $ram
prefer $prefer
response $response
outputType_io.out $OutputSection_io.out.outputType_io.out
transmissionMode_io.out $OutputSection_io.out.transmissionMode_io.out]]></command>
  <inputs>
    <param name="io.in" type="data" optional="false" label="The input disparity map (horizontal disparity in first band, vertical in second). This map can be computed by BlockMatching application." help="The input disparity map (horizontal disparity in first band, vertical in second). This map can be computed by BlockMatching application. The following data types are allowed in the txt file:  tiff, jpeg, png" format="txt"/>
    <param name="io.left" type="data" optional="false" label="Left image in original (sensor) geometry. Only the geometric model of this image will be used, not the pixel values." help="Left image in original (sensor) geometry. Only the geometric model of this image will be used, not the pixel values. The following data types are allowed in the txt file:  tiff, jpeg, png" format="txt"/>
    <param name="io.right" type="data" optional="false" label="Right image in original (sensor) geometry. Only the geometric model of this image will be used, not the pixel values." help="Right image in original (sensor) geometry. Only the geometric model of this image will be used, not the pixel values. The following data types are allowed in the txt file:  tiff, jpeg, png" format="txt"/>
    <param name="io.lgrid" type="data" optional="false" label="Left epipolar grid (deformation grid between left sensor et disparity spaces)" help="Left epipolar grid (deformation grid between left sensor et disparity spaces) The following data types are allowed in the txt file:  tiff, jpeg, png" format="txt"/>
    <param name="io.rgrid" type="data" optional="false" label="Right epipolar grid (deformation grid between right sensor et disparity spaces)" help="Right epipolar grid (deformation grid between right sensor et disparity spaces) The following data types are allowed in the txt file:  tiff, jpeg, png" format="txt"/>
    <param name="io.out" type="select" optional="false" label="Output elevation map in ground projection. Elevation values are in meters. Floating point pixel type are expected." help="Output elevation map in ground projection. Elevation values are in meters. Floating point pixel type are expected.">
      <option value="double">double</option>
      <option selected="true" value="float">float</option>
      <option value="int16">int16</option>
      <option value="int32">int32</option>
      <option value="uint16">uint16</option>
      <option value="uint8">uint8</option>
    </param>
    <param name="io.mask" type="data" optional="false" label="Masked disparity pixels won't be projected (mask values equal to zero)" help="Masked disparity pixels won't be projected (mask values equal to zero) The following data types are allowed in the txt file:  tiff, jpeg, png" format="txt"/>
    <param name="step" type="float" value="5" optional="false" label="Spacing of the output elevation map (in meters)" help="Spacing of the output elevation map (in meters)"/>
    <param name="hmin" type="float" value="0" optional="false" label="Minimum elevation expected (in meters)" help="Minimum elevation expected (in meters)"/>
    <param name="hmax" type="float" value="100" optional="false" label="Maximum elevation expected (in meters)" help="Maximum elevation expected (in meters)"/>
    <param name="elev.dem" type="text" optional="true" label="This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory." help="This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory."/>
    <param name="elev.geoid" type="data" optional="false" label="Use a geoid grid to get the height above the ellipsoid in case there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles. A version of the geoid can be found on the OTB website(https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb-data/blob/master/Input/DEM/egm96.grd)." help="Use a geoid grid to get the height above the ellipsoid in case there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles. A version of the geoid can be found on the OTB website(https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb-data/blob/master/Input/DEM/egm96.grd). The following data types are allowed in the txt file:  octet-stream" format="txt"/>
    <param name="elev.default" type="float" value="0" optional="false" label="This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value." help="This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value."/>
    <param name="ram" type="integer" value="128" optional="true" label="Available memory for processing (in MB)" help="Available memory for processing (in MB)"/>
    <param name="prefer" type="select" label="Choose the Prefer">
      <option selected="true" value="respond-async;return=representation">respond-async;return=representation</option>
      <option value="return=minimal">return=minimal</option>
      <option value="return=representation">return=representation</option>
    </param>
    <param name="response" type="select" label="Response Type" help="Choose 'raw' for raw data or 'document' for document data.">
      <option selected="true" value="document">document</option>
      <option value="raw">raw</option>
    </param>
    <section name="OutputSection_io.out" title="Select the appropriate transmission mode for the output format and the output value" expanded="true">
      <param name="outputType_io.out" type="select" label="Output elevation map in ground projection. Elevation values are in meters. Floating point pixel type are expected." help="Output elevation map in ground projection. Elevation values are in meters. Floating point pixel type are expected.">
        <option value="image/jpeg">jpeg</option>
        <option value="image/png">png</option>
        <option value="image/tiff">tiff</option>
      </param>
      <param name="transmissionMode_io.out" type="select" label="Choose the transmission mode">
        <option selected="true" value="reference">reference</option>
        <option value="value">value</option>
      </param>
    </section>
  </inputs>
  <outputs>
    <data name="output_data_io.out" format="tiff" hidden="false">
      <change_format>
        <when input="response" format="txt" value="document"/>
        <when input="outputType_io.out" format="jpeg" value="image/jpeg"/>
        <when input="outputType_io.out" format="png" value="image/png"/>
      </change_format>
    </data>
  </outputs>
  <tests>
    <test>
      <output name="output_data" value="txt"/>
      <param name="response" value="document"/>
    </test>
  </tests>
  <help><![CDATA[This application uses a disparity map computed from a stereo image pair to produce an elevation map on the ground area covered by the stereo pair.This application is part of the stereo reconstruction pipeline. It can be used after having computed the disparity map with BlockMatching.The needed inputs are : the disparity map, the stereo pair (in original geometry) and the epipolar deformation grids. These grids (computed by StereoRectificationGridGenerator) have to contain the transform between the original geometry (stereo pair) and the epipolar geometry (disparity map). The algorithm for each disparity is the following :  * skip if position is discarded by the disparity mask  * compute left ray : transform the current position from epipolar geometry to left sensor geometry (left rectification grid)  * compute right ray : shift the current position with current disparity and transform from epipolar geometry to right sensor (right rectification grid)  * estimate best 3D intersection between left and right rays  * for the ground cell of the obtained 3D point, keep its elevation if greater than current elevation (keeps the maximum of elevations of all 3D points in each cell)Minimum and maximum elevations settings are here to bound the reconstructed DEM.]]></help>
  <citations>
    <citation type="bibtex">Josh</citation>
  </citations>
</tool>
