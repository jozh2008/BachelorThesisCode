<tool name="OTB.ImageClassifier" id="otb_imageclassifier" version="1.0.0">
  <description>Performs a classification of the input image according to a model file.</description>
  <requirements>
    <requirement version="3.9" type="package">python</requirement>
  </requirements>
  <version_command><![CDATA[interpreter filename.exe --version]]></version_command>
  <command><![CDATA[$__tool_directory__/Code/openapi.py isArrayin False  isArraymask False  isArraymodel False  isArrayimstat False  output_data_out $output_data_out  output_data_confmap $output_data_confmap  name OTB.ImageClassifier in $in
mask $mask
model $model
imstat $imstat
nodatalabel $nodatalabel
out $out
confmap $confmap
ram $ram
prefer $prefer
response $response
outputType_out $OutputSection_out.outputType_out
transmissionMode_out $OutputSection_out.transmissionMode_out
outputType_confmap $OutputSection_confmap.outputType_confmap
transmissionMode_confmap $OutputSection_confmap.transmissionMode_confmap]]></command>
  <inputs>
    <param name="in" type="data" optional="false" label="The input image to classify." help="The input image to classify. The following data types are allowed in the txt file:  jpeg, png, tiff" format="txt"/>
    <param name="mask" type="data" optional="false" label="The mask allows restricting classification of the input image to the area where mask pixel values are greater than 0." help="The mask allows restricting classification of the input image to the area where mask pixel values are greater than 0. The following data types are allowed in the txt file:  jpeg, png, tiff" format="txt"/>
    <param name="model" type="data" optional="false" label="A model file (produced by TrainImagesClassifier application, maximal class label = 65535)." help="A model file (produced by TrainImagesClassifier application, maximal class label = 65535). The following data types are allowed in the txt file:  jpeg, png, tiff" format="txt"/>
    <param name="imstat" type="data" optional="false" label="A XML file containing mean and standard deviation to center and reduce samples before classification (produced by ComputeImagesStatistics application)." help="A XML file containing mean and standard deviation to center and reduce samples before classification (produced by ComputeImagesStatistics application). The following data types are allowed in the txt file:  xml" format="txt"/>
    <param name="nodatalabel" type="integer" value="0" optional="true" label="By default, hidden pixels will have the assigned label 0 in the output image. It's possible to define the label mask by another value, but be careful to not take a label from another class (max. 65535)." help="By default, hidden pixels will have the assigned label 0 in the output image. It's possible to define the label mask by another value, but be careful to not take a label from another class (max. 65535)."/>
    <param name="out" type="select" optional="false" label="Output image containing class labels" help="Output image containing class labels">
      <option value="double">double</option>
      <option value="float">float</option>
      <option value="int16">int16</option>
      <option value="int32">int32</option>
      <option value="uint16">uint16</option>
      <option selected="true" value="uint8">uint8</option>
    </param>
    <param name="confmap" type="select" optional="true" label="Confidence map of the produced classification. The confidence index depends on the model :   - LibSVM : difference between the two highest probabilities (needs a model with probability estimates, so that classes probabilities can be computed for each sample)  - OpenCV    * Boost : sum of votes    * DecisionTree : (not supported)    * GradientBoostedTree : (not supported)    * KNearestNeighbors : number of neighbors with the same label    * NeuralNetwork : difference between the two highest responses    * NormalBayes : (not supported)    * RandomForest : Confidence (proportion of votes for the majority class). Margin (normalized difference of the votes of the 2 majority classes) is not available for now.    * SVM : distance to margin (only works for 2-class models)" help="Confidence map of the produced classification. The confidence index depends on the model :   - LibSVM : difference between the two highest probabilities (needs a model with probability estimates, so that classes probabilities can be computed for each sample)  - OpenCV    * Boost : sum of votes    * DecisionTree : (not supported)    * GradientBoostedTree : (not supported)    * KNearestNeighbors : number of neighbors with the same label    * NeuralNetwork : difference between the two highest responses    * NormalBayes : (not supported)    * RandomForest : Confidence (proportion of votes for the majority class). Margin (normalized difference of the votes of the 2 majority classes) is not available for now.    * SVM : distance to margin (only works for 2-class models)">
      <option value="double">double</option>
      <option value="float">float</option>
      <option value="int16">int16</option>
      <option value="int32">int32</option>
      <option value="uint16">uint16</option>
      <option selected="true" value="uint8">uint8</option>
    </param>
    <param name="ram" type="integer" value="128" optional="true" label="Available memory for processing (in MB)" help="Available memory for processing (in MB)"/>
    <param name="prefer" type="select" label="Choose the Prefer">
      <option selected="true" value="respond-async;return=representation">respond-async;return=representation</option>
      <option value="return=minimal">return=minimal</option>
      <option value="return=representation">return=representation</option>
    </param>
    <param name="response" type="select" label="Response Type" help="Choose 'raw' for raw data or 'document' for document data.">
      <option selected="true" value="document">document</option>
      <option value="raw">raw</option>
    </param>
    <section name="OutputSection_out" title="Select the appropriate transmission mode for the output format" expanded="true">
      <param name="outputType_out" type="select" label="Output image containing class labels" help="Output image containing class labels">
        <option value="image/jpeg">jpeg</option>
        <option value="image/png">png</option>
        <option value="image/tiff">tiff</option>
      </param>
      <param name="transmissionMode_out" type="select" label="Choose the transmission mode">
        <option selected="true" value="reference">reference</option>
        <option value="value">value</option>
      </param>
    </section>
    <section name="OutputSection_confmap" title="Select the appropriate transmission mode for the output format" expanded="true">
      <param name="outputType_confmap" type="select" label="Confidence map of the produced classification. The confidence index depends on the model :   - LibSVM : difference between the two highest probabilities (needs a model with probability estimates, so that classes probabilities can be computed for each sample)  - OpenCV    * Boost : sum of votes    * DecisionTree : (not supported)    * GradientBoostedTree : (not supported)    * KNearestNeighbors : number of neighbors with the same label    * NeuralNetwork : difference between the two highest responses    * NormalBayes : (not supported)    * RandomForest : Confidence (proportion of votes for the majority class). Margin (normalized difference of the votes of the 2 majority classes) is not available for now.    * SVM : distance to margin (only works for 2-class models)" help="Confidence map of the produced classification. The confidence index depends on the model :   - LibSVM : difference between the two highest probabilities (needs a model with probability estimates, so that classes probabilities can be computed for each sample)  - OpenCV    * Boost : sum of votes    * DecisionTree : (not supported)    * GradientBoostedTree : (not supported)    * KNearestNeighbors : number of neighbors with the same label    * NeuralNetwork : difference between the two highest responses    * NormalBayes : (not supported)    * RandomForest : Confidence (proportion of votes for the majority class). Margin (normalized difference of the votes of the 2 majority classes) is not available for now.    * SVM : distance to margin (only works for 2-class models)">
        <option value="image/jpeg">jpeg</option>
        <option value="image/png">png</option>
        <option value="image/tiff">tiff</option>
      </param>
      <param name="transmissionMode_confmap" type="select" label="Choose the transmission mode">
        <option selected="true" value="reference">reference</option>
        <option value="value">value</option>
      </param>
    </section>
  </inputs>
  <outputs>
    <data name="output_data_out" format="tiff" hidden="false">
      <change_format>
        <when input="response" format="txt" value="document"/>
        <when input="outputType_out" format="jpeg" value="image/jpeg"/>
        <when input="outputType_out" format="png" value="image/png"/>
      </change_format>
    </data>
    <data name="output_data_confmap" format="tiff" hidden="false">
      <change_format>
        <when input="response" format="txt" value="document"/>
        <when input="outputType_confmap" format="jpeg" value="image/jpeg"/>
        <when input="outputType_confmap" format="png" value="image/png"/>
      </change_format>
    </data>
  </outputs>
  <tests>
    <test>
      <output name="output_data" value="txt"/>
      <param name="response" value="document"/>
    </test>
  </tests>
  <help><![CDATA[This application performs an image classification based on a model file produced by the TrainImagesClassifier application. Pixels of the output image will contain the class labels decided by the classifier (maximal class label = 65535). The input pixels can be optionally centered and reduced according to the statistics file produced by the ComputeImagesStatistics application. An optional input mask can be provided, in which case only input image pixels whose corresponding mask value is greater than 0 will be classified. By default, the remaining of pixels will be given the label 0 in the output image.]]></help>
  <citations>
    <citation type="bibtex">Josh</citation>
  </citations>
</tool>
