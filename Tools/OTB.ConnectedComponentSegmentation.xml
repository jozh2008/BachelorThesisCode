<tool name="OTB.ConnectedComponentSegmentation" id="otb_connectedcomponentsegmentation" version="1.0.0">
  <description>Connected component segmentation and object based image filtering of the input image according to user-defined criterions.</description>
  <requirements>
    <requirement version="3.9" type="package">python</requirement>
  </requirements>
  <version_command><![CDATA[interpreter filename.exe --version]]></version_command>
  <command><![CDATA[$__tool_directory__/Code/openapi.py isArrayin False  isArrayelev.geoid False  output_data_out $output_data_out  name OTB.ConnectedComponentSegmentation in $in
mask '$mask'
expr '$expr'
minsize $minsize
obia '$obia'
elev.dem '$elev.dem'
elev.geoid $elev.geoid
elev.default $elev.default
ram $ram
prefer $prefer
response $response
outputType_out $OutputSection_out.outputType_out
transmissionMode_out $OutputSection_out.transmissionMode_out]]></command>
  <inputs>
    <param name="in" type="data" optional="false" label="The image to segment." help="The image to segment. The following data types are allowed in the txt file:  jpeg, tiff, png" format="txt"/>
    <param name="mask" type="text" optional="true" label="Mask mathematical expression (only if support image is given)" help="Mask mathematical expression (only if support image is given)"/>
    <param name="expr" type="text" optional="false" label="Formula used for connected component segmentation" help="Formula used for connected component segmentation"/>
    <param name="minsize" type="integer" value="2" optional="true" label="Min object size (area in pixel)" help="Min object size (area in pixel)"/>
    <param name="obia" type="text" optional="true" label="OBIA mathematical expression" help="OBIA mathematical expression"/>
    <param name="elev.dem" type="text" optional="true" label="This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory." help="This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory."/>
    <param name="elev.geoid" type="data" optional="false" label="Use a geoid grid to get the height above the ellipsoid in case there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles. A version of the geoid can be found on the OTB website(https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb-data/blob/master/Input/DEM/egm96.grd)." help="Use a geoid grid to get the height above the ellipsoid in case there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles. A version of the geoid can be found on the OTB website(https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb-data/blob/master/Input/DEM/egm96.grd). The following data types are allowed in the txt file:  octet-stream" format="txt"/>
    <param name="elev.default" type="float" value="0" optional="false" label="This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value." help="This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value."/>
    <param name="ram" type="integer" value="128" optional="true" label="Available memory for processing (in MB)" help="Available memory for processing (in MB)"/>
    <param name="prefer" type="select" label="Choose the Prefer">
      <option selected="true" value="respond-async;return=representation">respond-async;return=representation</option>
      <option value="return=minimal">return=minimal</option>
      <option value="return=representation">return=representation</option>
    </param>
    <param name="response" type="select" label="Response Type" help="Choose 'raw' for raw data or 'document' for document data.">
      <option selected="true" value="document">document</option>
      <option value="raw">raw</option>
    </param>
    <section name="OutputSection_out" title="Select the appropriate transmission mode for the output format and the output value" expanded="true">
      <param name="outputType_out" type="select" label="The segmentation shape." help="The segmentation shape.">
        <option value="application/json">json</option>
        <option value="application/vnd.google-earth.kml+xml">vnd.google-earth.kml+xml</option>
        <option value="application/zip">zip</option>
        <option value="text/xml">xml</option>
      </param>
      <param name="transmissionMode_out" type="select" label="Choose the transmission mode">
        <option selected="true" value="reference">reference</option>
        <option value="value">value</option>
      </param>
    </section>
  </inputs>
  <outputs>
    <data name="output_data_out" format="xml" hidden="false">
      <change_format>
        <when input="response" format="txt" value="document"/>
        <when input="outputType_out" format="vnd.google-earth.kml+xml" value="application/vnd.google-earth.kml+xml"/>
        <when input="outputType_out" format="json" value="application/json"/>
        <when input="outputType_out" format="zip" value="application/zip"/>
      </change_format>
    </data>
  </outputs>
  <tests>
    <test>
      <output name="output_data" value="txt"/>
      <param name="response" value="document"/>
    </test>
  </tests>
  <help><![CDATA[This application allows one to perform a masking, connected components segmentation and object based image filtering. First and optionally, a mask can be built based on user-defined criterions to select pixels of the image which will be segmented. Then a connected component segmentation is performed with a user defined criterion to decide whether two neighbouring pixels belong to the same segment or not. After this segmentation step, an object based image filtering is applied using another user-defined criterion reasoning on segment properties, like shape or radiometric attributes. Criterions are mathematical expressions analysed by the MuParser library (http://muparser.sourceforge.net/). For instance, expression "((b1>80) and intensity>95)" will merge two neighbouring pixel in a single segment if their intensity is more than 95 and their value in the first image band is more than 80. See parameters documentation for a list of available attributes. The output of the object based image filtering is vectorized and can be written in shapefile or KML format. If the input image is in raw geometry, resulting polygons will be transformed to WGS84 using sensor modelling before writing, to ensure consistency with GIS software. For this purpose, a Digital Elevation Model can be provided to the application. The whole processing is done on a per-tile basis for large images, so this application can handle images of arbitrary size.]]></help>
  <citations>
    <citation type="bibtex">Josh</citation>
  </citations>
</tool>
